<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog.txt">

    <!-- enable asp.net core layout renderers -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
    </extensions>

    <targets async="true">
        <target xsi:type="File"
                name="errorfile"
                fileName="${basedir}/Logs/HSMPing-error-log-${shortdate}.txt"
                layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}| ${message} ${exception:format=tostring}|"
                archiveFileName="${basedir}/Logs/Archives/HSMPing-error-log-{#}.zip"
                archiveNumbering="Date"
                archiveEvery="Day"
                archiveDateFormat="yyyy-MM-dd"
                maxArchiveFiles="60"
                enableArchiveFileCompression="true"
                enableFileDelete="true"/>

        <target xsi:type="File"
                name="allfile"
                fileName="${basedir}/Logs/HSMPing-all-log-${shortdate}.txt"
                layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}| ${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}"
                archiveFileName="${basedir}/Logs/Archives/HSMPing-all-log-{#}.zip"
                archiveNumbering="Date"
                archiveEvery="Day"
                archiveDateFormat="yyyy-MM-dd"
                maxArchiveFiles="60"
                enableArchiveFileCompression="true"
                enableFileDelete="true"/>

        <target name="consoleWrapper" xsi:type="AsyncWrapper">
            <target xsi:type="ColoredConsole"
                    name="coloredConsole"
                    layout="${longdate}|${pad:padding=5:inner=${level}}|${logger}|${message} ${exception}"
                    useDefaultRowHighlightingRules="false"
                    detectConsoleAvailable="true">
                <highlight-row condition="level == LogLevel.Debug" foregroundColor="Green" />
                <highlight-row condition="level == LogLevel.Info" foregroundColor="White" />
                <highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
                <highlight-row condition="level == LogLevel.Error" foregroundColor="Red" />
                <highlight-row condition="level == LogLevel.Fatal" foregroundColor="Red" backgroundColor="White" />
            </target>
        </target>

    </targets>

    <rules>
        <logger name="*" minlevel="Error" writeTo="errorfile"/>

        <logger name="*" minlevel="Debug" writeTo="consoleWrapper">
            <filters defaultAction="Log">
                <when condition="level == LogLevel.Debug and (starts-with(logger, 'Microsoft') or starts-with(logger, 'System'))" action="Ignore"></when>
                <when condition="level == LogLevel.Info and starts-with(logger, 'Microsoft.AspNetCore')" action="Ignore"></when>
            </filters>
        </logger>

        <logger name="*" minlevel="Trace" maxlevel="Info" writeTo="allfile">
            <filters defaultAction="Log">
                <when condition="logger == '${infrastructureLogger}'" action="LogFinal" />
                <when condition="'${buildConfiguration}' == 'Release'" action="Ignore" />
            </filters>
        </logger>
        <logger name="*" minlevel="Warn" writeTo="allfile"/>
    </rules>
</nlog>