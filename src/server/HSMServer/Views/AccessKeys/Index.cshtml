@using HSMServer.Model.AccessKeysViewModels
@using HSMServer.Constants
@using HSMServer.Controllers
@using HSMServer.Model.Authentication

@model AccessKeyTableViewModel

@{
    ViewData["Title"] = "Access keys";
}


<script>
    var getAvailableAccessKeys = "@Html.Raw(Url.Action(nameof(AccessKeysController.AvailableAccessKeys), ViewConstants.AccessKeysController))";
    var getSearchKeyResult = "@Html.Raw(Url.Action(nameof(AccessKeysController.SearchKeyResult), ViewConstants.AccessKeysController))";
</script>


<div class="container">
    <div class="row w-100 justify-content-center">
        <div class="m-2">
            <div class="row" justify-content-start>
                <div class="col-2">
                    <h5 class="my-2">Access keys</h5>
                </div>
            </div>
        </div>
        <div class="container row my-1 pe-0">
            <div class="col-4 p-0">
                <input id="searchKey" type="text" class="form-control" placeholder="Filter by key"/>
            </div>
            <div class="d-flex justify-content-between col">
                <button onclick="searchKey()" type="button" class="btn btn-secondary ms-1">
                    <i type="button" class="fas fa-search"></i>
                </button>
                @if ((User as User).IsAdmin)
                {
                    <button onclick="createAccessKey()" class="btn btn-link me-0 pe-0">
                       <i class="fa-solid fa-key"></i>
                        Add key
                    </button>
                }
            </div>
        </div>
        <div class="container mt-2">
            <div class="d-flex align-items-center w-100 justify-content-center" id="accessTable">
                @await Html.PartialAsync("_AllAccessKeys", Model)
            </div>
        </div>

    </div>
</div>



@await Html.PartialAsync("_AccessKeysModal")


<script>
    var clipboard = new ClipboardJS('[id^="copy_"]');

    $('#accessKeys_modal').on('hidden.bs.modal', function (e) {
        allProductsChanged();
    });

    function allProductsChanged() {
        $.ajax({
            type: 'GET',
            url: getAvailableAccessKeys,
            cache: false,
            async: true,
            success: function (viewData) {
                $('#accessKeysTable').html(viewData);
            }
        });
    }
    
    function searchKey() {
        const keyToSearch = document.getElementById("searchKey").value;
        $.ajax({
               type: 'GET',
               url: getSearchKeyResult + "?searchKey=" + keyToSearch,
               cache: false,
               async: true,
               success: function (viewData) {
                    $('#accessKeysTable').html(viewData)
                    document.querySelectorAll("#accessTable tr").length <= 1 ? $('#accessKeysTable').html("<div><h2><strong>Keys not found</strong></h2></div>") : this;
               }
        });
    }
    
    function createAccessKey(){
       let newAccessKeyURL = "@Url.Action(nameof(AccessKeysController.NewServerAccessKey), ViewConstants.AccessKeysController)";
    
       showNewAccessKeyModal(`${newAccessKeyURL}`, true);   
    }
</script>