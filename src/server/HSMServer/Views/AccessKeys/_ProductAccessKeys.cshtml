@using HSMServer.Model.TreeViewModels
@using HSMServer.Controllers
@using HSMServer.Constants
@using HSMServer.Core.Model.Authentication
@using HSMServer.Extensions

@model ProductNodeViewModel


@{
    var user = User as User;
}

<link rel="stylesheet" href="~/css/bundles/accessKeyBundle.min.css"/>
<script src="~/js/clipboard.js/clipboard.min.js"></script>


<input id='accessKey_prodcutId' style='display: none' value="@Model.EncodedId"/>
<input id='accessKey_productName' style='display: none' value="@Model.Name"/>

<table class="table">
    <tr>
        <th>Key</th>
        <th></th>
        <th>Display name</th>
        <th>Permissions</th>
        <th>State</th>
        <th>Actions</th>
    </tr>
    @foreach (var (_, key) in Model.AccessKeys)
    {
        var title = $"Status : {key.State}\nExpiration date : {key.ExpirationDate}";
        <tr>
            <td nowrap>@key.Id</td>
            <td>
                <button id="copy_@key.Id" data-clipboard-text="@key.Id" title="copy key" class="btn btn-secondary">
                    <i class="far fa-copy"></i>
                </button>
            </td>
            <td nowrap>@Html.Raw(key.DisplayName)</td>
            <td>@key.Permissions</td>
            <td class="text-center">
                <i class='@key.State.ToIcon()' title="@title"></i>
            </td>
            <td nowrap class="text-center">
                @if (key.ParentProduct.IsChangingAccessKeysAvailable(user))
                {
                    <div class='btn-group'>
                        <i class="fa-solid fa-ellipsis-vertical" data-bs-toggle="dropdown" style="cursor: pointer"></i>
                        <div class='dropdown-menu'>
                            <button id='changeAccessKey_@key.Id' class='dropdown-item'>Edit</button>
                            <button id='blockAccessKey_@key.Id' class='dropdown-item'>Block</button>
                            <button id='deleteAccessKey_@key.Id' class='dropdown-item'>Remove</button>
                        </div>
                    </div>
                }
            </td>
        </tr>
    }
</table>

<div align="right">
    @if (Model.IsChangingAccessKeysAvailable(User as User))
    {
        <button class="btn btn-secondary" onclick="addButtonClick()">Add</button>
    }
    <button class="btn btn-secondary" onclick="hideModal()">Close</button>
</div>


<script>
    var clipboardCopy = new ClipboardJS('[id^="copy_"]', {
        container: document.getElementById('accessKeys_modal')
    });

    function addButtonClick() {
        let productId = $('#accessKey_prodcutId').val();
        let newAccessKeyURL = "@Html.Raw(Url.Action(nameof(AccessKeysController.NewAccessKey), ViewConstants.AccessKeysController))";

        showNewAccessKeyModal(`${newAccessKeyURL}?Selected=${productId}`, false);
    }
</script>