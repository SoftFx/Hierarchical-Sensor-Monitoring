@using HSMServer.Model.TreeViewModels
@using HSMServer.Controllers
@using HSMServer.Constants
@using HSMServer.Core.Model.Authentication

@model ProductNodeViewModel


<script src="~/js/clipboard.js/clipboard.min.js"></script>


<input id='accessKey_prodcutId' style='display: none' value="@Model.EncodedId" />
<input id='accessKey_productName' style='display: none' value="@Model.Name" />

<table class="table">
    <tr>
        <th>Key</th>
        <th></th>
        <th>Display name</th>
        <th>Permissions</th>
        <th>Expiration</th>
        <th>State</th>
    </tr>
    @foreach (var (_, key) in Model.AccessKeys)
    {
        <tr>
            <td nowrap>@key.Id</td>
            <td>
                <button id="copy_@key.Id" data-clipboard-text="@key.Id" title="copy key" class="btn btn-secondary">
                    <i class="far fa-copy"></i>
                </button>
            </td>
            <td nowrap>@key.DisplayName</td>
            <td>@key.Permissions</td>
            <td>@key.ExpirationDate</td>
            <td>@key.State</td>
        </tr>
    }
</table>

<div align="right">
    @if (Model.IsChangingAccessKeysAvailable(User as User))
    {
        <button class="btn btn-secondary" onclick="addButtonClick()">Add</button>
    }
    <button class="btn btn-secondary" onclick="hideModal()">Close</button>
</div>


<script>
    var clipboardCopy = new ClipboardJS('[id^="copy_"]', {
        container: document.getElementById('accessKeys_modal')
    });

    function addButtonClick() {
        let productId = $('#accessKey_prodcutId').val();
        let newAccessKeyURL = "@Html.Raw(Url.Action(nameof(AccessKeysController.NewAccessKey), ViewConstants.AccessKeysController))";

        showNewAccessKeyModal(`${newAccessKeyURL}?Selected=${productId}`, false);
    }
</script>
