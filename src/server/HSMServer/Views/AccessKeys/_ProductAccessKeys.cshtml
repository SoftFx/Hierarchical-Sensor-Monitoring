@using HSMServer.Model.TreeViewModels
@using HSMServer.Controllers
@using HSMServer.Constants
@using HSMServer.Core.Model.Authentication

@model ProductNodeViewModel


@{
    var user = User as User;
}

<link rel="stylesheet" href="~/css/bundles/accessKeyBundle.min.css"/>
<script src="~/js/clipboard.js/clipboard.min.js"></script>


@await Html.PartialAsync("~/Views/Shared/_DeletionConfirmationModal.cshtml")
<script src="~/js/bundles/accessKey.min.js"></script>

<input class="d-none" id='accessKey_prodcutId' value="@Model.EncodedId"/>
<input class="d-none" id='accessKey_productName' value="@Model.Name"/>

<table class="table">
    <tr>
        <th>Display name</th>
        @if (Model.IsChangingAccessKeysAvailable(User as User))
        {
            <th>Key</th>
        }
        <th>Permissions</th>
        <th>State</th>
        @if (Model.IsChangingAccessKeysAvailable(User as User))
        {
            <th>Action</th>
        }
    </tr>
    <tbody id="accessKeysTable">
    @await Html.PartialAsync("_AllAccessKeys", Model.GetEditProductAccessKeys())
    </tbody>
</table>

<div align="right">
    @if (Model.IsChangingAccessKeysAvailable(User as User))
    {
        <button class="btn btn-secondary" onclick="addButtonClick()">Add</button>
    }
    <button class="btn btn-secondary" onclick="hideModal()">Close</button>
</div>


<script>
    function addButtonClick() {
        let productId = $('#accessKey_prodcutId').val();
        let newAccessKeyURL = "@Html.Raw(Url.Action(nameof(AccessKeysController.NewAccessKey), ViewConstants.AccessKeysController))";

        showNewAccessKeyModal(`${newAccessKeyURL}?Selected=${productId}`, false);
    }
</script>