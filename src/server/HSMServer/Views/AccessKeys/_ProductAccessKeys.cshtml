@using HSMServer.Model.TreeViewModel
@using HSMServer.Controllers
@using HSMServer.Constants
@using HSMServer.Model.Authentication
@using HSMServer.Model.AccessKeysViewModels

@model ProductNodeViewModel


@{
    var user = User as User;
}


@await Html.PartialAsync("~/Views/Shared/_ConfirmationModal.cshtml")

<input class="d-none" id='accessKey_prodcutId' value="@Model.EncodedId"/>
<input class="d-none" id='accessKey_productName' value="@Model.Name"/>
<div class="container-fluid">
    <div class="table-responsive overflow-visible">
        @await Html.PartialAsync("_AllAccessKeys",new AccessKeyTableViewModel() { Keys = Model.GetAccessKeys()})
    </div>


    <div class="container-fluid d-flex flex-row-reverse align-items-center flex-shrink-0 ">
        <div class="row flex-nowrap">
            @if (Model.IsChangingAccessKeysAvailable(User as User))
            {
                <button id="addButton" class="btn btn-secondary col-2 w-50 mx-1" type="button" onclick="addButtonClick()">Add</button>
            }
            <button id="closeButton" class="btn btn-secondary col-2" type="button" onclick="hideModal()">Close</button>
        </div>
    </div>
</div>


<script>
    function addButtonClick() {
        let productId = $('#accessKey_prodcutId').val();
        let newAccessKeyURL = "@Html.Raw(Url.Action(nameof(AccessKeysController.NewAccessKey), ViewConstants.AccessKeysController))";

        showNewAccessKeyModal(`${newAccessKeyURL}?selectedId=${productId}`, false);
    }
    
    $(document).ready(() => {
        if (document.getElementById('addButton') !== null){
            document.getElementById('closeButton').classList.add('w-50')
        }
        else{
            document.getElementById('closeButton').classList.add('w-100')
        }
    })       
</script>