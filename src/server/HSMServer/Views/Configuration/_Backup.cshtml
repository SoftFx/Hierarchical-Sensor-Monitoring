@using HSMServer.Constants
@using HSMServer.Controllers
@using HSMServer.Model.Configuration
@using HSMServer.ServerConfiguration

@model BackupSettingsViewModel


<div class="row mt-3">
    <div class="col-2">
        <label class="col-form-label" asp-for="IsEnabled"></label>
    </div>
    <div class="col-auto form-check form-switch ms-3 mt-2">
        <input class="form-check-input" type="checkbox" asp-for="IsEnabled">
    </div>
</div>
<div class="row">
    <div class="offset-2 col-10">
        <label class="note">Will information be backed up. Default value is @BackupDatabaseConfig.DefaultIsBackupEnabled. The setting will be applied in real time.</label>
    </div>
</div>

<div class="row mt-2">
    <div class="col-2">
        <label class="col-form-label" asp-for="BackupPeriodHours"></label>
    </div>
    <div class="col-2">
        <input class="form-control" asp-for="BackupPeriodHours">
    </div>
    <div class="col">
        <label class="col-form-label">hour(s)</label>
    </div>
</div>
<div class="row">
    <div class="offset-2 col-10">
        <label class="note">Frequency of environment database backup. This database contains meta information of server entities. Default value is @BackupDatabaseConfig.DefaultPeriodHours hour. The setting will be applied after the server is restarted.</label>
    </div>
</div>

<div class="row mt-2">
    <div class="col-2">
        <label class="col-form-label" asp-for="BackupStoragePeriodDays"></label>
    </div>
    <div class="col-2">
        <input class="form-control" asp-for="BackupStoragePeriodDays">
    </div>
    <div class="col">
        <label class="col-form-label">day(s)</label>
    </div>
</div>
<div class="row">
    <div class="offset-2 col-10">
        <label class="note">Maximum storage time for database backup. Default value is @BackupDatabaseConfig.DefaultStoragePeriodDays days. The setting will be applied after the server is restarted.</label>
    </div>
</div>

<hr/>

<div class="row">
    <div class="col-1 text-end">
        <label class="col-form-label" asp-for="Address"></label>
    </div>
    <div class="col-5">
        <input class="form-control" asp-for="Address">
    </div>
    <div class="col-1 text-end">
        <label class="col-form-label text-end" asp-for="Port"></label>
    </div>
    <div class="col-2">
        <input class="form-control" asp-for="Port">
    </div>
    <div class="col text-end">
        <button id="checkConnectionButton" type="button" class="btn btn-primary">Check connection</button>
    </div>
</div>
<div class="row">
    <div class="offset-1 col-5">
        <label class="note">Sftp server address.</label>
    </div>
    <div class="offset-1 col-2">
        <label class="note">Sftp server port (empty for default).</label>
    </div>
    <div id="checkConnectionErrorMessage" class="col text-end" style="color: red; display: none;"></div>
</div>

<div class="row mt-2">
    <div class="col-1 text-end">
        <label class="col-form-label" asp-for="Username"></label>
    </div>
    <div class="col-5">
        <input class="form-control" asp-for="Username">
    </div>
    <div class="col-1 text-end">
        <label class="col-form-label" asp-for="Password" typeof="password"></label>
    </div>
    <div class="col-5">
        <input class="form-control" asp-for="Password">
    </div>
</div>
<div class="row">
    <div class="offset-1 col-5">
        <label class="note">User name.</label>
    </div>
    <div class="offset-1 col-5">
        <label class="note">Password (Empty if no needed).</label>
    </div>
</div>

<div class="row mt-2">
    <div class="col-1 text-end">
        <label class="col-form-label" asp-for="RootPath"></label>
    </div>
    <div class="col-11">
        <input class="form-control" asp-for="RootPath"></input>
    </div>
</div>
<div class="row">
    <div class="offset-1 col">
        <label class="note">Root path.</label>
    </div>
</div>

<div class="row mt-2">
    <div class="col-1 text-end">
        <label class="col-form-label" asp-for="PrivateKey"></label>
    </div>
    <div class="col-11">
        <textarea class="form-control" asp-for="PrivateKey" rows="5"></textarea>
    </div>
</div>
<div class="row">
    <div class="offset-1 col">
        <label class="note">Private key.</label>
    </div>
</div>

<div class="d-flex justify-content-between mt-2">
    <button id="createBackupButton" type="button" class="btn btn-primary mt-1">Backup & Upload</button>
    <button type="submit" class="btn btn-primary independentSizeButton mt-1">Save</button>
</div>

<div id="createBackupErrorMessage" style="color: red; display: none;"></div>

<script>
    $(document).ready(function () {
        savingFormSubscribe("backupSettings_form", "Backup settings have been succesfully saved!");
    });

    $('[id^=createBackupButton]').on('click', function() {
        $.ajax({
            type: 'GET',
            url: '@Html.Raw(Url.Action(nameof(ConfigurationController.CreateBackup), ViewConstants.ConfigurationController))',
            dataType: 'html',
            contentType: 'text',
            cache: false,
            async: true,
            success: function(data) {
                let message = $("#createBackupErrorMessage");
                message.css("display", "block");

                if (data == "") {
                    message.empty().css("color", "green").append("Success.");
                }
                else {
                    message.empty().css("color", "red").append(data);
                }
            }
        });
    });

         $('[id^=checkConnectionButton]').on('click', function() {
            var form = document.getElementById('backupSettings_form');
            var formData = new FormData(form);
            $.ajax({
                type: 'POST',
                url: '@Html.Raw(Url.Action(nameof(ConfigurationController.CheckSftpConnection), ViewConstants.ConfigurationController))',
                data: formData,
                processData: false,
                contentType: false,
                async: false,
                success: function(data) {
                    let message = $("#checkConnectionErrorMessage");
                    message.css("display", "block");

                    if (data == "") {
                        message.empty().css("color", "green").append("Success.");
                    }
                    else {
                        message.empty().css("color", "red").append(data);
                    }
                }
            });
        });
</script>