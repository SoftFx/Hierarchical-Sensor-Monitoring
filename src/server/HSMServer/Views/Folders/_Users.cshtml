@using HSMServer.Model.Authentication
@using HSMServer.Model.Folders.ViewModels
@using HSMServer.Controllers
@using HSMServer.Constants
@using HSMServer.Extensions

@model FolderUsersViewModel


@if (Model != null)
{
    <div class="my-2" align="right">
        <a href="javascript:showAddUserRoleModal();" class="btn btn-link p-0 @(Model.NotAdminUsers.Count == 0 ? "disabled" : string.Empty)">
            <i class="fa-solid fa-user-plus"></i> Add user
        </a>
    </div>

    @if (Model.Users.Count > 0)
    {
        <table class='table table-striped'>
            <thead>
                <tr>
                    <th scope='col'>User</th>
                    <th scope='col'>Role</th>
                    <th scope='col' class="text-center">Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var (user, userRole) in Model.Users.OrderBy(u => u.Key.Name))
                {
                    <tr>
                        <td class="text-break">
                            @user.Name
                            <input id="userName_@user.Id" value="@user.Name" class="d-none"/>
                        </td>
                        <td class="w-20">
                            <label id="roleLabel_@user.Id">@userRole.GetDisplayName()</label>
                            <select class='form-select d-none' id='role_@user.Id'>
                                @foreach (ProductRoleEnum role in Enum.GetValues<ProductRoleEnum>())
                                {
                                    <option value='@((int)role)' @(role == userRole ? "selected" : string.Empty)>@role.GetDisplayName()</option>
                                }
                            </select>
                        </td>
                        <td nowrap class="text-center w-10">
                            <div id="actions_@user.Id" class='btn-group'>
                                <button id="actionButton" class="btn" data-bs-toggle="dropdown" data-bs-auto-close="true" aria-haspopup="true" aria-expanded="false">
                                    <i class="fa-solid fa-ellipsis-vertical" style="cursor: pointer"></i>
                                </button>
                                <ul class='dropdown-menu overflow-auto' aria-labelledby="dropdownMenuButton">
                                    <li>
                                        <a id='edit_@user.Id' class='dropdown-item text-decoration-none fw-normal' style="cursor: pointer;">
                                            Edit
                                        </a>
                                    </li>
                                    <li>
                                        <a id='delete_@user.Id' class='dropdown-item text-decoration-none fw-normal' style="cursor: pointer;">
                                            Delete
                                        </a>
                                    </li>
                                </ul>
                            </div>
                            <div id="editActions_@user.Id" class="d-inline-flex d-none">
                                <button id='ok_@user.Id' type="button" class='btn btn-link px-0' title='ok'>
                                    <i class="fa-solid fa-check fa-xl" style="color: limegreen;"></i>
                                </button>
                                <button id='cancel_@user.Id' type='button' class='btn btn-link pe-0' title='cancel'>
                                    <i class="fa-solid fa-xmark fa-xl" style="color: red;"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @await Html.PartialAsync("_AddUserRoleModal")
}


<script>
    function createUserRightData(userId, role) {
        let folderId = $('#folderIdToEdit').val();

        return { "EntityId": folderId, "UserId": userId, "ProductRole": role }
    }

    function addUserRole() {
        let userId = $('#userIdToAdd').val();
        let role = $('#userRoleToAdd').val();

        changeUsers('@Url.Action(nameof(FoldersController.AddUserRole), ViewConstants.FoldersController)', createUserRightData(userId, role));
        hideAddUserRoleModal();
    };

    $('[id^=edit_]').on('click', function () {
        let userId = this.id.substring('edit_'.length, this.id.length);

        $('[id^=role_]').addClass("d-none");
        $('[id^=roleLabel_]').removeClass("d-none");
        $('[id^=actions_]').removeClass("d-none");
        $('[id^=editActions_]').addClass("d-none");

        $(`#role_${userId}`).removeClass("d-none");
        $(`#roleLabel_${userId}`).addClass("d-none");
        $(`#editActions_${userId}`).removeClass("d-none");
        $(`#actions_${userId}`).addClass("d-none");
    });

    $('[id^=ok_]').on('click', function () {
        let userId = this.id.substring('ok_'.length, this.id.length);
        let role = $(`#role_${userId}`).val();

        changeUsers('@Url.Action(nameof(FoldersController.EditUserRole), ViewConstants.FoldersController)', createUserRightData(userId, role));
    });

    $('[id^=cancel_]').on('click', function () {
        let folderId = $('#folderIdToEdit').val();

        $.ajax({
            type: 'GET',
            url: `@Url.Action(nameof(FoldersController.ResetUsers), ViewConstants.FoldersController)?FolderId=${folderId}`,
            dataType: 'html',
            contentType: 'application/json',
            cache: false,
            async: true,
            success: function (viewData) {
                $("#folderUsers").html(viewData);
            }
        });
    });

    $('[id^=delete_]').on('click', function () {
        let userId = this.id.substring('delete_'.length, this.id.length);
        let userName = $(`#userName_${userId}`).val();

        showDeletionConfirmationModal(
            `Removing user '${userName}' role`,
            `Do you really want to remove user '${userName}' role?`,
            function() {
                changeUsers('@Url.Action(nameof(FoldersController.RemoveUserRole), ViewConstants.FoldersController)', createUserRightData(userId, 0));
            }
        );
    });

    function showAddUserRoleModal() {
        $(`#addUserRole_modal`).modal({
            backdrop: 'static'
        });
        $(`#addUserRole_modal`).modal('show');
    }

    function hideAddUserRoleModal() {
        $(`#addUserRole_modal`).modal('hide');
    }

    function changeUsers(action, data) {
        $.ajax({
            type: 'POST',
            url: action,
            data: JSON.stringify(data),
            contentType: 'application/json',
            cache: false,
            async: true,
            success: function (viewData) {
                $("#folderUsers").html(viewData);
            }
        });
    }
</script>
