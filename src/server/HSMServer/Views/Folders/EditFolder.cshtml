@using HSMServer.Constants
@using HSMServer.Controllers
@using HSMServer.Model.Folders.ViewModels

@model EditFolderViewModel

@{
    var isAdd = Model.IsAddMode;
    var disabledTab = isAdd ? "disabled" : string.Empty;

    ViewData["Title"] = "Edit folder";
}

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


<div class="container">
    <div class="row w-100 justify-content-center">
        <div class="d-flex justify-content-between my-3 p-0">
            <h5 class="text-break">@(isAdd ? "Add folder" : $"Edit folder '{@Model.OldName}'")</h5>

            @if (!isAdd)
            {
                <a href="javascript:removeFolder();">
                    <i class='fas fa-trash-alt'></i> Remove
                </a>
            }
        </div>

        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="general-tab" data-bs-toggle="tab" data-bs-target="#general" type="button" role="tab" aria-controls="general" aria-selected="true">General</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link @disabledTab" id="cleanup-tab" data-bs-toggle="tab" data-bs-target="#cleanup" type="button" role="tab" aria-controls="cleanup" aria-selected="false">Cleanup</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link @disabledTab" id="alerts-tab" data-bs-toggle="tab" data-bs-target="#alerts" type="button" role="tab" aria-controls="alerts" aria-selected="false">Alerts</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link @disabledTab" id="notifications-tab" data-bs-toggle="tab" data-bs-target="#notifications" type="button" role="tab" aria-controls="notifications" aria-selected="false">Notifications</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link @disabledTab" id="users-tab" data-bs-toggle="tab" data-bs-target="#users" type="button" role="tab" aria-controls="users" aria-selected="false">Users</button>
            </li>
        </ul>
        <div class="tab-content w-100" id="myTabContent">
            <div class="tab-pane fade show active" id="general" role="tabpanel" aria-labelledby="general-tab">
                <form method="post" asp-action="@(isAdd ? nameof(FoldersController.AddFolder) : nameof(FoldersController.EditFolder))">
                    @await Html.PartialAsync("_General", Model)
                </form>
            </div>

            <div class="tab-pane fade" id="cleanup" role="tabpanel" aria-labelledby="cleanup-tab">
                <form id="folderCleanup_form" method="post" asp-action="@nameof(FoldersController.EditCleanup)">
                    @await Html.PartialAsync("_Cleanup", Model.Cleanup)
                </form>
            </div>

            <div class="tab-pane fade" id="alerts" role="tabpanel" aria-labelledby="alerts-tab">
                <form id="folderAlerts_form" method="post" asp-action="@nameof(FoldersController.EditAlerts)">
                    @await Html.PartialAsync("_Alerts", Model.Alerts)
                </form>
            </div>

            <div class="tab-pane fade" id="notifications" role="tabpanel" aria-labelledby="notifications-tab">
                <div id="notificationSettings">
                    @await Html.PartialAsync("~/Views/Notifications/_MessagesSettings.cshtml", Model.Telegram)
                </div>
            </div>

            <div class="tab-pane fade" id="users" role="tabpanel" aria-labelledby="users-tab">
                <div id="folderUsers">
                    @await Html.PartialAsync("_Users", Model.Users)
                </div>
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Views/Shared/_ConfirmationModal.cshtml")


<script>
    function removeFolder() {
        showConfirmationModal(
            `Removing folder '@Model.Name'`,
            `Do you really want to remove folder '@Model.Name'? All products from this folder will be moved to products without folder.`,
            function () {
                $.ajax({
                    type: 'POST',
                    url: `@Url.Action(nameof(FoldersController.RemoveFolder), ViewConstants.FoldersController)?FolderId=@Model.Id`,
                    cache: false,
                    async: true,
                    success: function() {
                        window.location.href = "@Url.Action(nameof(ProductController.Index), ViewConstants.ProductController)";
                    }
                });
            }
        );
    }

    $(document).on("submit", "#telegramMessagesSettings_form", function (event) {
        event.preventDefault();
        event.stopImmediatePropagation();

        $.ajax({
            url: $("#telegramMessagesSettings_form").attr("action"),
            type: 'POST',
            data: new FormData(this),
            datatype: 'html',
            processData: false,
            contentType: false,
            cache: false,
            async: true,
            success: function (viewData) {
                $("#notificationSettings").html(viewData);
                showToast("Folder notifications settings have been succesfully saved!");
            }
        });
    });
</script>
