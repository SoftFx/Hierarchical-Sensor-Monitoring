@using HSMServer.Constants
@using HSMServer.Controllers
@using HSMServer.Notifications
@using HSMServer.Model.NotificationViewModels

@inject NotificationsCenter NotificationsCenter

@model ChatsViewModelBase

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


<div class="my-2">
    <div class="d-flex justify-content-between my-2">
        <div class="d-flex">
            <h6 class="col-auto fw-bold">@Model.Title</h6>
            @if (Model.Chats.Count == 0)
            {
                <h6 class="col-auto p-0">(There are no authorized @Model.Title.ToLower())</h6>
            }
        </div>

        <div class="d-flex mx-0 my-0">
            @if (Model is GroupChatsViewModel)
            {
                <a href="javascript:showAddTelegramGroupHelp();">Add group help</a>
            }
            else if (Model is PrivateChatsViewModel)
            {
                <a asp-action="@nameof(NotificationsController.OpenInvitationLink)" target="_blank">Invitation link</a>
            }
        </div>
    </div>

    @if (Model.Chats.Count > 0)
    {
        <table class="table">
            <tr>
                <th>@Model.NameColumn</th>
                <th>Products</th>
                <th>Admins</th>
                <th style="text-align:center">Actions</th>
            </tr>
            @foreach (var chat in Model.Chats)
            {
                <tr>
                    <td>
                        @if (chat.IsUserChat)
                        {
                            <span>@chat.Name</span>
                        }
                        else
                        {
                            <a target="_blank" asp-controller="@ViewConstants.NotificationsController"
                               asp-action="@nameof(NotificationsController.OpenTelegramGroup)"
                               asp-route-chatId="@chat.ChatId">
                                @chat.Name
                            </a>
                        }
                    </td>
                    <td>List of connected products</td>
                    <td>List of admins for groups/user for accounts</td>
                    <td style="text-align:center">
                        <div class="dropdown">
                            <button id="actionButton" class="btn" data-bs-toggle="dropdown" data-bs-auto-close="true" aria-haspopup="true" aria-expanded="false">
                                <i class="fa-solid fa-ellipsis-vertical" style="cursor: pointer"></i>
                            </button>
                            <ul class="dropdown-menu overflow-auto">
                                <li>
                                    <a>Send test message</a> @*TODO: should be realized for private and group chats*@
                                    @*@if (chat.IsUserChat)
                                    {
                                        <a class="dropdown-item text-decoration-none fw-normal" asp-action="@nameof(NotificationsController.SendTestTelegramMessage)"
                                           asp-route-chatId="@chat.ChatId">
                                            Send test message
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="dropdown-item text-decoration-none fw-normal" asp-controller="@ViewConstants.NotificationsController"
                                           asp-action="@nameof(NotificationsController.SendTestTelegramMessage)"
                                           asp-route-entityId="@Model.EntityId"
                                           asp-route-chatId="@chat.ChatId">
                                            Send test message
                                        </a>
                                    }*@
                                </li>
                                <li>
                                            <a>Remove authorization</a> @*TODO: should be realized for private and group chats*@
                                    @*@if (chat.IsUserChat)
                                    {
                                        <a class="dropdown-item text-decoration-none fw-normal" asp-action="@nameof(NotificationsController.RemoveTelegramAuthorization)"
                                           asp-route-chatId="@chat.ChatId">
                                            Remove authorization
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="dropdown-item text-decoration-none fw-normal" asp-controller="@ViewConstants.NotificationsController"
                                           asp-action="@nameof(NotificationsController.RemoveTelegramAuthorization)"
                                           asp-route-entityId="@Model.EntityId"
                                           asp-route-chatId="@chat.ChatId">
                                            Remove authorization
                                        </a>
                                    }*@
                                </li>
                            </ul>
                        </div>
                    </td>
                </tr>
            }
        </table>
    }
</div>


<script>
    function showAddTelegramGroupHelp() {
        showAddTelegramGroupHelpModal();
    }
</script>
