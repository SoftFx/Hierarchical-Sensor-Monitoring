@using HSMServer.Extensions
@using HSMServer.Model.Authentication

@model HSMServer.Model.TreeViewModels.TreeNodeStateViewModel

@{
    var data = Model.Data;
}


<li id='@data.EncodedId' title='@data.Tooltip' data-jstree='{"title" : "@data.Title", "icon" : "@data.Status.ToIcon()", "time" : "@data.UpdateTime.ToDefaultFormat()"}'>
    <span>@Html.Raw(data.Name.GetShortNodeName()) @Model.SensorsCountString</span>

    @if (!data.IsEmpty)
    {
        @if (data.TelegramSettings.Chats.Count > 0)
        {
            <span>
                <i id="@(data.EncodedId)_notifications" class="fa-solid fa-bell"></i>
            </span>
            
            @if (Model.GroupState.IsAllIgnored)
            {
                <span class="d-none">
                    <img id="@(data.EncodedId)_groupsIgnoredNotifications" src="~/dist/snooze.png" style="height: 1em;width: 1em;" alt="!"/>
                </span>
            }
            else if (!Model.GroupState.IsAnyEnabled)
            {
                <span class="d-none">
                    <i id="@(data.EncodedId)_groupsDisabledNotifications" class="fa-solid fa-bell-slash"></i>
                </span>
            }
        }
        else
        {
            @if (Model.GroupState.IsAllIgnored)
            {
                <span>
                    <img id="@(data.EncodedId)_groupsIgnoredNotifications" src="~/dist/snooze.png" style="height: 1em;width: 1em;" alt="!"/>
                </span>
            }
            else if (!Model.GroupState.IsAnyEnabled)
            {
                <span>
                    <i id="@(data.EncodedId)_groupsDisabledNotifications" class="fa-solid fa-bell-slash"></i>
                </span>
            }
        }
        
        @if (Model.AccountState.IsAllIgnored)
        {
            <span class="d-none">
                <img id="@(data.EncodedId)_accountsIgnoreNotifications" src="~/dist/user-crossed.png" style="height: 1em;width: 1em;" alt="!"/>
            </span>
        }
        else if (Model.AccountState.IsAnyEnabled)
        {
            <span class="d-none">
                <img id="@(data.EncodedId)_accountsNotifications" src="~/dist/user.png" style="height: 1em;width: 1em;" alt="!"/>
            </span>
        }
    }

    @foreach (var child in Model.Nodes)
    {
        <ul>@await Html.PartialAsync("_TreeNode", child)</ul>
    }

    @if (Model.Sensors.Count > 0)
    {
        <ul>
            @foreach (var sensor in Model.Sensors)
            {
                @await Html.PartialAsync("_TreeSensor", sensor)
            }
        </ul>
    }
</li>