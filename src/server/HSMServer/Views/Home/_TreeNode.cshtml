@using HSMServer.Extensions
@using HSMServer.Model.Authentication
@using HSMServer.Model.UserTreeShallowCopy

@model NodeShallowModel

@{
    var data = Model.Data;

    var showIcons = (User as User).TreeFilter.ByVisibility.Icons.Value;

    var arrowIcon = Model.VisibleSensorsCount > 0 ? "jstree-closed" : string.Empty;
}


<li class="@arrowIcon" id='@data.EncodedId' title='@data.Tooltip' data-jstree='@Model.ToJSTree()'>
    <span class="@(Model.IsMutedState ? "muted-state-text" : "")">
        @await Html.PartialAsync("_TreeAlertIcons", data.AlertIcons)
        @Html.Raw(data.Name.GetShortNodeName()) @Model.SensorsCountString
    </span>

    @if (!data.IsEmpty && !Model.IsMutedState && showIcons)
    {
        @if (Model.IsAccountsEnable && !(Model.Parent?.IsAccountsEnable ?? false))
        {
            <span>
                <img class="tree-png-icon" src="~/dist/user.png" alt="!"/>
            </span>
        }
        else if (Model.IsAccountsIgnore && !(Model.Parent?.IsAccountsIgnore ?? false))
        {
            <span>
                <img class="tree-png-icon" src="~/dist/user-crossed.png" alt="!"/>
            </span>
        }

        @if (Model.IsGroupsEnable && !(Model.Parent?.IsGroupsEnable ?? false))
        {
            <span>
                <img class="tree-png-icon" src="~/dist/users.png" alt="!"/>
            </span>
        }
        else if (Model.IsGroupsIgnore && !(Model.Parent?.IsGroupsIgnore ?? false))
        {
            <span>
                <img class="tree-png-icon" src="~/dist/users-crossed.png" alt="!"/>
            </span>
        }

        @if (Model.IsGrafanaEnabled && !(Model.Parent?.IsGrafanaEnabled ?? false))
        {
            <span>
                <img class="tree-png-icon" src="~/dist/grafana.svg" alt="!" title="Grafana"/>
            </span>
        }
    }

    @foreach (var child in Model.Nodes)
    {
        <ul>@await Html.PartialAsync("_TreeNode", child)</ul>
    }

    @if (Model.Sensors.Count > 0)
    {
        <ul>
            @foreach (var sensor in Model.Sensors)
            {
                @await Html.PartialAsync("_TreeSensor", sensor)
            }
        </ul>
    }
    @if (Model.IsDisabledNodeShown)
    {
        <ul>
            <li class="jstree-last jstree-no-icons noHover" id='disabled_@data.EncodedId' data-jstree='@BaseShallowModel.GetDisabledJSTree()'>
                <span>... and @Model.WidthDifference more</span>
            </li>
        </ul>
    }
    
</li>