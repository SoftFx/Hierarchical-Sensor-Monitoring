@using HSMServer.Extensions
@using HSMServer.Model.UserTreeShallowCopy

@model NodeShallowModel

@{
    var data = Model.Data;
}


<li id='@data.EncodedId' title='@data.Tooltip' data-jstree='@Model.ToJSTree()'>
    <span class="@(Model.IsIgnoredState ? "ignored-state-text" : "")">@Html.Raw(data.Name.GetShortNodeName()) @Model.SensorsCountString</span>

    @if (!data.IsEmpty)
    {
        @if (data.TelegramSettings.Chats.Count > 0)
        {
            @if (Model.IsGroupsEnable && !Model.AreParentGroupsEnabled)
            {
                <span>
                    <img class="tree-png-icon" src="~/dist/users.png" alt="!" />
                </span>
            }
            @if (Model.IsAccountsEnable && !Model.AreParentAccountsEnabled)
            {
                <span>
                    <img class="tree-png-icon" src="~/dist/user.png" alt="!" />
                </span>
            }
        }
        else
        {
            @if (Model.IsGroupsEnable && !Model.AreParentGroupsEnabled)
            {
                <span>
                    <img class="tree-png-icon" src="~/dist/users.png" alt="!" />
                </span>
            }
            @if (Model.IsAccountsEnable && !Model.AreParentAccountsEnabled)
            {
                <span>
                    <img class="tree-png-icon" src="~/dist/user.png" alt="!" />
                </span>
            }
        }
        
        @if (!Model.IsIgnoredState)
        {
            @if (Model.AccountState.IsAllIgnored && !Model.AreParentAccountsIgnored)
            {
                <span>
                    <img class="tree-png-icon" src="~/dist/user-crossed.png" alt="!"/>
                </span>
            }
            @if (Model.GroupState.IsAllIgnored && !Model.AreParentGroupsIgnored)
            {
                <span>
                    <img class="tree-png-icon" src="~/dist/users-crossed.png" alt="!"/>
                </span>
            }
        }
    }

    @foreach (var child in Model.Nodes)
    {
        child.AreParentGroupsEnabled = Model.IsGroupsEnable;
        child.AreParentAccountsEnabled = Model.IsAccountsEnable;
        child.AreParentAccountsIgnored = Model.AccountState.IsAllIgnored;
        child.AreParentGroupsIgnored = Model.GroupState.IsAllIgnored;
        <ul>@await Html.PartialAsync("_TreeNode", child)</ul>
    }

    @if (Model.Sensors.Count > 0)
    {
        <ul>
            @foreach (var sensor in Model.Sensors)
            {
                sensor.AreParentGroupsEnabled = Model.IsGroupsEnable;
                sensor.AreParentAccountsEnabled = Model.IsAccountsEnable;
                sensor.AreParentAccountsIgnored = Model.AccountState.IsAllIgnored;
                sensor.AreParentGroupsIgnored = Model.GroupState.IsAllIgnored;
                @await Html.PartialAsync("_TreeSensor", sensor)
            }
        </ul>
    }
</li>