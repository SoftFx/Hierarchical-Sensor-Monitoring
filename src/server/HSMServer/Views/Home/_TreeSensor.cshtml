@using HSMServer.Extensions
@using HSMServer.Model.Authentication
@using HSMServer.Model.UserTreeShallowCopy

@model SensorShallowModel

@{
    var data = Model.Data;
    var userNotifications = (User as User)?.Notifications;
}


<li id='@data.EncodedId' title='@data.Tooltip' data-jstree='@Model.ToJSTree()'>
    <span class="@data.State.ToCssClass()">@Html.Raw(data.Name.GetShortNodeName())</span>
    
    @if (Model.IsGroupsEnable && !Model.AreParentGroupsEnabled)
    {
        <span>
            <img class="tree-png-icon" src="~/dist/users.png" alt="!" />
        </span>
    }
    
    @if (Model.IsAccountsEnable && !Model.AreParentAccountsEnabled)
    {
        <span>
            <img class="tree-png-icon" src="~/dist/user.png" alt="!" />
        </span>
    }
    
    @if (!Model.IsIgnoredState)
    {
        @if (data.RootProduct.Notifications.IgnoredSensors.TryGetValue(data.Id, out var time) && time != DateTime.MaxValue && !Model.AreParentGroupsIgnored)
        {
            <span>
                <img class="tree-png-icon" src="~/dist/users-crossed.png" alt="!" />
            </span>
        }
    
        @if (userNotifications.IgnoredSensors.TryGetValue(data.Id, out var time2) && time2 != DateTime.MaxValue && !Model.AreParentAccountsIgnored)
        {
            <span>
                <img class="tree-png-icon" src="~/dist/user-crossed.png" alt="!" />
            </span>
        }
    }
</li>