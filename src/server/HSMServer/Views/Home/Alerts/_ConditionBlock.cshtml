@using HSMServer.Model.DataAlerts

@model ConditionViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{
    var condition = Model.PropertiesItems.FirstOrDefault()?.Value;

    var isTtlCondition = condition == ConditionViewModel.TimeToLiveCondition;
    var isSensitivityCondition = condition == ConditionViewModel.SensitivityCondition;
    var isValueCondition = !isTtlCondition && !isSensitivityCondition;

    var isMainCondition = Model.PropertiesItems.Any(i => i.Value == ConditionViewModel.TimeToLiveCondition);
}


<div name="alertCondition" class="d-flex flex-row align-items-center alert-blocks-group ms-3 py-1">
    <div class="@(isMainCondition ? "d-none" : "d-flex") alert-text-block alert-add me-3">and</div>

    <select name="conditionsSelect" class="alert-block alert-select property-select" asp-items="@Model.PropertiesItems"></select> @*old name  asp-for="Property"*@

    <div name="valueCondition" class="@(isValueCondition ? "d-flex" : "d-none") flex-row align-items-center">
        <select class="alert-block alert-select operation-select" asp-items="@Model.ActionsItems"></select> @*old name  asp-for="Operation"*@
        <input class="alert-block target-input target-value" type="text" placeholder="<enter a value>" required> @*old name  asp-for="Value" value="@Model.Value"*@
    </div>

    <div name="sensitivityCondition" class="@(isSensitivityCondition ? "d-flex" : "d-none") flex-row align-items-center">
        <div class="alert-text-block operation-select">more than</div>
        <partial name="_TimeIntervalSelect" for="Sensitivity" /> @*old name  for="Sensitivity"*@
    </div>

    <div name="ttlCondition" class="@(isTtlCondition ? "d-flex" : "d-none") flex-row align-items-center">
        <div class="alert-text-block operation-select">is</div>
        <partial name="_TimeIntervalSelect" for="TimeToLive" /> @*old name  for="Sensitivity"*@
    </div>

    <a class="deleteCondition"><i class="@(isMainCondition ? "d-none" : "d-flex") fa-solid fa-xmark alert-delete-button"></i></a>
</div>


<script>
    $('select[name="conditionsSelect"]').off("change").on("change", function () {
        console.log("change event!");
        let conditionBlock = $(this).parents("div[name='alertCondition']:first");

        let value = conditionBlock.find($(`div[name='valueCondition']`));
        let timeToLive = conditionBlock.find($(`div[name='ttlCondition']`));
        let sensitivity = conditionBlock.find($(`div[name='sensitivityCondition']`));

        let addButton = $(this).parents("div.fullCondition:first").find($(`a.addCondition`));

        let condition = $(this).val();
        if (condition === '@ConditionViewModel.TimeToLiveCondition') {
            value.removeClass("d-flex").addClass('d-none');
            sensitivity.removeClass("d-flex").addClass('d-none');
            addButton.removeClass("d-block").addClass('d-none');

            timeToLive.removeClass("d-none").addClass('d-flex');
        }
        else if (condition === '@ConditionViewModel.SensitivityCondition') {
            value.removeClass("d-flex").addClass('d-none');
            timeToLive.removeClass("d-flex").addClass('d-none');

            sensitivity.removeClass("d-none").addClass('d-flex');
            addButton.removeClass("d-none").addClass('d-block');
        }
        else {
            sensitivity.removeClass("d-flex").addClass('d-none');
            timeToLive.removeClass("d-flex").addClass('d-none');

            value.removeClass("d-none").addClass('d-flex');
            addButton.removeClass("d-none").addClass('d-block');
        }
    });

    $("a.deleteCondition").off("click").on("click", function () {
        console.log("delete");
        $(this).parents("div[name='alertCondition']:first").remove();
    });
</script>
