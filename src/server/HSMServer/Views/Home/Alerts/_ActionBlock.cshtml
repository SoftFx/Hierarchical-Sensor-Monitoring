@using HSMServer.Extensions
@using HSMServer.Model.DataAlerts

@model ActionViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{
    var action = Model.Action;

    var isSendAction = action == ActionType.SendNotification;
    var isShowAction = action == ActionType.ShowIcon;

    var isSecondaryCondition = !Model.IsMain;
}


<div name="alertAction" class="d-flex flex-row align-items-center alert-blocks-group py-1 ms-3">
    <div class="@isSecondaryCondition.ToVisibility() alert-text-block alert-add me-3">and</div>

    <select class="alert-block alert-select property-select" asp-for="Action" asp-items="Model.Actions"></select>

    <div name="sendNotificationAction" class="@isSendAction.ToVisibility()">
        <input type="text" class="alert-block target-input target-comment" placeholder="message template" asp-for="Comment" value="@Model.Comment" required="@(isSendAction ? true : false)">
    </div>

    <div name="showIconAction" class="@isShowAction.ToVisibility() alert-block">
        <div name="emoji" class="target-input">@Model.Icon</div>
    </div>

    <a class="deleteAction"><i class="@isSecondaryCondition.ToVisibility() fa-solid fa-xmark alert-delete-button"></i></a>
</div>


<script>
    $(document).ready(function () {
        let emoji = $("div[name='emoji']").emojioneArea({
            filtersPosition: "bottom",
            standalone: true,
            autocomplete: false
        });
    });

    $('select[name="Action"]').off("change").on("change", function () {
        let actionBlock = $(this).parents("div[name='alertAction']:first");

        let send = actionBlock.find($(`div[name='sendNotificationAction']`));
        let show = actionBlock.find($(`div[name='showIconAction']`));

        let commentInput = send.find($(`input[name='Comment']`));

        let action = $(this).val();
        if (action === '@ActionType.SendNotification') {
            show.removeClass("d-flex").addClass('d-none');

            commentInput.attr('required', true);
            send.removeClass("d-none").addClass('d-flex');
        }
        else if (action === '@ActionType.ShowIcon') {
            commentInput.attr('required', false);
            send.removeClass("d-flex").addClass('d-none');

            show.removeClass("d-none").addClass('d-flex');
        }
        else if (action === '@ActionType.SetStatus') {
            commentInput.attr('required', false);
            send.removeClass("d-flex").addClass('d-none');
            show.removeClass("d-flex").addClass('d-none');
        }
    });

    $("a.deleteAction").off("click").on("click", function () {
        $(this).parents("div[name='alertAction']:first").remove();
    });
</script>
