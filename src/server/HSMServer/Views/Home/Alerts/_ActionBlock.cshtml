@using HSMServer.Model.DataAlerts

@model ActionViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


@{
    var action = Model.Action;

    var isSendAction = action == ActionViewModel.SendNotifyAction;
    var isShowAction = action == ActionViewModel.ShowIconAction;
}


<div name="alertAction" class="d-flex flex-row align-items-center alert-blocks-group py-1 ms-3">
    <div class="@(Model.IsMain ? "d-none" : "d-flex") alert-text-block alert-add me-3">and</div>

    <select class="alert-block alert-select property-select" asp-for="Action" asp-items="Model.Actions"></select>

    <div name="sendNotificationAction" class="@(isSendAction ? "d-block" : "d-none")">
        <input type="text" class="alert-block target-input target-comment" placeholder="message template" asp-for="Comment" value="@Model.Comment" required="@(isSendAction ? true : false)">
    </div>

    <div name="showIconAction" class="@(isShowAction ? "d-block" : "d-none") alert-block">
        <div name="emoji" class="target-input">@Model.Icon</div>
    </div>

    <a class="deleteAction"><i class="@(Model.IsMain ? "d-none" : "d-flex") fa-solid fa-xmark alert-delete-button"></i></a>
</div>


<script>
    $(document).ready(function () {
        let emoji = $("div[name='emoji']").emojioneArea({
            filtersPosition: "bottom",
            standalone: true,
            autocomplete: false
        });
    });

    $('select[name="Action"]').off("change").on("change", function () {
        let actionBlock = $(this).parents("div[name='alertAction']:first");

        let send = actionBlock.find($(`div[name='sendNotificationAction']`));
        let show = actionBlock.find($(`div[name='showIconAction']`));

        let commentInput = send.find($(`input[name='Comment']`));

        let action = $(this).val();
        if (action === '@ActionViewModel.SendNotifyAction') {
            show.removeClass("d-block").addClass('d-none');

            commentInput.attr('required', true);
            send.removeClass("d-none").addClass('d-block');
        }
        else if (action === '@ActionViewModel.ShowIconAction') {
            commentInput.attr('required', false);
            send.removeClass("d-block").addClass('d-none');

            show.removeClass("d-none").addClass('d-block');
        }
        else if (action === '@ActionViewModel.SetStatusAction') {
            commentInput.attr('required', false);
            send.removeClass("d-block").addClass('d-none');
            show.removeClass("d-block").addClass('d-none');
        }
    });

    $("a.deleteAction").off("click").on("click", function () {
        $(this).parents("div[name='alertAction']:first").remove();
    });
</script>
