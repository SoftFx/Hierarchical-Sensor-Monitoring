@using HSMServer.Controllers
@using HSMServer.Model.ViewModel

@model SensorInfoViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


<div id='sensor_info_@Model.EncodedId'>
    <div class="d-flex ms-1 mt-1 me-0 justify-content-between">
        <div class='d-flex justify-content-start'>
            <h5 class="my-1 align-self-center">@Html.Raw($"{Model.ProductName}{Model.Path}")</h5>
        </div>
        <div class="d-flex">
            <button id="editButtonMetaInfo" type='button' class='btn btn-secondary mx-0 my-1' onclick="editInfoButtonClick()"
                    data-bs-toggle='tooltip' title='edit meta info'>
                <i class='fas fa-edit'></i>
                Edit
            </button>
        </div>
    </div>
    <form class="mb-0" asp-action="@nameof(HomeController.UpdateSensorInfo)" id="editSensorMetaInfo_form">
        <input id="sensorMetaInfo_encodedId" style='display: none' asp-for="EncodedId" value="@Model.EncodedId"/>
        <div class="d-none">
            <div class="form-control border-0" style="max-width: 15rem;">
                Description:
            </div>
            <div class="w-100">
                <span class="naked-text w-100 ms-1 ps-2" id='span_description_@(Model.EncodedId)'>@Model.Description</span>
                <textarea id='description_@(Model.EncodedId)' class="form-control naked-text w-100 ms-1 ps-2 d-none"  type='text' asp-for="Description" value='@Model.Description' disabled></textarea>
            </div>
        </div>

        <div class="collapse" id="multiCollapseExample1">
            <div class="d-flex justify-content-start">
                <div class="d-flex ps-2 ms-1 text-nowrap">
                    <span>Sensor Type:</span>
                </div>
                <div class="d-flex w-100 ps-2">
                    <span>@Model.SensorType</span>
                </div>
            </div>
            <div class="d-flex justify-content-start">
                <div class="d-flex ps-2 ms-1 text-nowrap">
                    <span>Sensor Status:</span>
                </div>
                <div class="d-flex w-100 ps-2">
                    <span>Ok</span>
                </div>
            </div>

            <table class='table table-bordered'>
                <tbody>
                <tr>
                    <td class="w-25">
                        Expected sensor(s) update interval
                        <i class='fas fa-question-circle' title='Time format: dd.hh:mm:ss min value 00:01:00.
                    If the sensor doesn`t receive new data within the specified time interval, a notification sends'></i>
                    </td>
                    <td id="productExpectedUpdateInterval_@(Model.EncodedId)">
                        <label id="labelInterval" class="form-control naked-text">@Model.ExpectedUpdateInterval.DisplayInterval</label>
                        <div id="partialIntervalSelect" class="d-none">
                            <partial name="_TimeIntervalSelect" for="ExpectedUpdateInterval"/>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td class="w-25">
                        Sensitivity sensor(s) interval
                        <i class='fas fa-question-circle' title='Time format: dd.hh:mm:ss min value 00:01:00.
                 If the sensor doesn`t return to Ok status after the specified time inverval, a notification sends'></i>
                    </td>
                    <td id="productRestorePolicy_@(Model.EncodedId)">
                        <label id="labelRestoreInterval" class="form-control naked-text">@Model.SensorRestorePolicy.DisplayInterval</label>
                        <div id="partialRestoreSelect" class="d-none">
                            <partial name="_TimeIntervalSelect" for="SensorRestorePolicy"/>
                        </div>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>

        <button class="btn btn-outline-secondary w-100" id="sensor_info_collapse" title="Shows additional info" type="button" data-bs-toggle="collapse" onclick="collapseChangeTextContent()" href="#multiCollapseExample1" role="button" aria-expanded="false" aria-controls="multiCollapseExample1" ><i id="collapse_icon" class="fa-solid fa-caret-down"></i></button>

        <div class="d-flex justify-content-end m-3 my-2 gap-2 me-0">
            <button id='saveInfo_@(Model.EncodedId)' type='submit' class='btn btn-secondary px-2 independentSizeButton'
                    data-bs-toggle='tooltip' title='save meta info' hidden disabled>
                <span>Save</span>
            </button>
            <button id='revertInfo_@(Model.EncodedId)' type='button' class='btn btn-secondary px-2 independentSizeButton' onclick="revertInfoClick()"
                    data-bs-toggle='tooltip' title='revert changes' hidden disabled>
                <span>Cancel</span>
            </button>
        </div>
    </form>
</div>

<script>
    $(document).ready(() => {
        let description = $('[id^="description_"]')[0].innerHTML;
        
        if (description !== '' && description !== undefined)
            $('#editSensorMetaInfo_form').children('div').first().removeClass('d-none');
        else {
            let temp = $('#editSensorMetaInfo_form').children('div').first().clone().removeClass('d-none');
            $('#editSensorMetaInfo_form').children('div').first().remove();
            $('#multiCollapseExample1').prepend(temp);
        }
    });
    
    $(document).on("submit", "#editSensorMetaInfo_form", function (event) {
        event.preventDefault();
        event.stopImmediatePropagation();

        $.ajax({
            url: $("#editSensorMetaInfo_form").attr("action"),
            type: 'POST',
            data: $("#editSensorMetaInfo_form").serialize(),
            datatype: 'json',
            async: true,
            success: (viewData) => {
                console.log('succes')
                displaySensorMetaInfo($('#sensorMetaInfo_encodedId').val(), viewData);
            }
        });
    });
    
    function collapseChangeTextContent(){
        let icon = $('#collapse_icon')[0];
        
        if (icon.classList.contains('fa-caret-up'))
            icon.classList.toggle('fa-caret-down')
        else icon.classList.toggle('fa-caret-up')
    }
</script>