@using HSMServer.Core.Model
@using HSMServer.Extensions

@model HSMServer.Model.TreeViewModels.SensorNodeViewModel

@{
    var sensorId = Model.EncodedId;

    var graphElementId = $"graph_{sensorId}";
    var graphParentDivId = $"graph_parent_{sensorId}";
    var valuesElementId = $"values_{sensorId}";
    var valuesParentDivId = $"values_parent_{sensorId}";
}


<div class='accordion' id='sensorData_@sensorId'>
    <div class='accordion-item'>
        @if (Model.SensorType == SensorType.File)
        {
            <div id='collapse_@sensorId' class='accordion-collapse' data-bs-parent='#sensorData_@sensorId'>
                <div class='accordion-body'>
                    <div class="w-100">
                        <div class='row justify-content-between'>
                            <div class='row col-md-auto'>
                                <div class='col-md-auto sensor-icon-without-padding'>
                                    <li id='status_@sensorId' class='@Model.Status.ToIcon() sensor-icon-with-margin'
                                        title='Status: @Model.Status'>
                                    </li>
                                    <span id='validation_@sensorId'>
                                        @if (Model.IsValidationErrorVisible)
                                        {
                                            <li id='errorIcon_@sensorId' class='fas fa-exclamation-triangle' style='margin-right:5px' title='@Model.ValidationError'></li>
                                        }
                                    </span>
                                </div>
                                @Model.Name
                            </div>
                            <input id='sensor_type_@sensorId' value='@((int)Model.SensorType)' style='display: none'/>
                            <div class='col-md-auto time-ago-div me-1' id='update_@sensorId'>updated @Model.GetTimeAgo()</div>
                        </div>
                        <div id="value_@sensorId" class="text-break">
                            @Model.ShortStringValue
                        </div>
                    </div>
                    @if (Model.LastValue != null)
                    {
                        <div class='row'>
                            <div class='col-md-auto'>
                                <button id='button_view_@sensorId' class='button-view-file-sensor btn btn-secondary' title='View'>
                                    <i class='fas fa-eye'></i>
                                </button>
                            </div>
                            <div class='col'>
                                <input style='display: none;' id='fileType_@sensorId' value='@Model.FileNameString'/>
                                <button id='button_download_@sensorId' class='button-download-file-sensor-value btn btn-secondary' title='Download'>
                                    <i class='fas fa-file-download'></i>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <h2 class='accordion-header' id='heading_@sensorId'>
                <button id='accordion_@sensorId' class='accordion-button collapsed' type='button' data-bs-toggle='collapse'
                        data-bs-target='#collapse_@sensorId' aria-expanded='false' aria-controls='collapse_@sensorId'>
                    <div class="w-100">
                        <div class='row justify-content-between'>
                            <div class='row col-md-auto'>
                                <div class='col-md-auto sensor-icon-without-padding'>
                                    <li id='status_@sensorId' class='@Model.Status.ToIcon() sensor-icon-with-margin' title='Status: @Model.Status'></li>
                                    <span id='validation_@sensorId'>
                                        @if (Model.IsValidationErrorVisible)
                                        {
                                            <li id='errorIcon_@sensorId' class='fas fa-exclamation-triangle' style='margin-right:5px' title='@Model.ValidationError'></li>
                                        }
                                    </span>
                                </div>
                                @Model.Name
                            </div>
                            <div class='col-md-auto'>
                                <input id='sensor_type_@sensorId' value='@((int)Model.SensorType)' style='display: none'/>
                                <div id='update_@sensorId' class='time-ago-div me-1'>updated @Model.GetTimeAgo()</div>
                            </div>
                        </div>
                        <div class="text-break" id='value_@sensorId'>
                            @Model.ShortStringValue
                        </div>
                    </div>
                </button>
            </h2>

            <div id='collapse_@sensorId' class='accordion-collapse collapse text-break' aria-labelledby='heading_@sensorId' data-bs-parent='#sensorData_@sensorId'>
                <div class='accordion-body p-3'>
                    <div>
                        <div class="d-flex justify-content-between">
                            <div>
                                <label class="me-1" for="from_@sensorId">From:</label>
                                <input class="me-2" type="datetime-local" id="from_@sensorId" name="from">

                                <label class="me-1" for="to_@sensorId">To:</label>
                                <input class="me-2" type="datetime-local" id="to_@sensorId" name="to">

                                @if (Model.SensorType == SensorType.IntegerBar || Model.SensorType == SensorType.DoubleBar)
                                {
                                    <label class="me-1" for="barsCount_@sensorId" id="labelBarsCount_@sensorId">Bars count:</label>
                                    <input class="me-2" style="width:70px" type="number" id="barsCount_@sensorId" name="barsCount" min="1" max="1000">
                                }

                                <button onclick="searchHistory('@sensorId')" type="button" class="btn btn-secondary">
                                    <i type="button" class="fas fa-search"></i>
                                </button>
                            </div>

                            <div class='btn-group'>
                                <button class='btn btn-secondary btn-sm dropdown-toggle' type='button' data-bs-toggle='dropdown'>Actions</button>
                                <ul class='dropdown-menu'>
                                    <li>
                                        <a class='dropdown-item' href='#' id='button_export_csv_@sensorId'>Export to CSV</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="mt-2">
                            <div id='no_data_@sensorId' style='display: none'>
                                <p>No data for the specified period</p>
                            </div>
                            <div id='history_@sensorId'>
                                @if (Model.IsPlottingSupported)
                                {
                                    <ul class='nav nav-tabs'>
                                        <li class='nav-item'>
                                            <a id='link_graph_@sensorId' class='nav-link active' data-bs-toggle='tab' href='#@graphParentDivId'>Graph</a>
                                        </li>
                                        <li class='nav-item'>
                                            <a id='link_table_@sensorId' class='nav-link' data-bs-toggle='tab' href='#@valuesParentDivId'>Table</a>
                                        </li>
                                    </ul>
                                    <div class='tab-content'>
                                        <div class='tab-pane fade show active' id=@graphParentDivId>
                                            <div id='@graphElementId'></div>
                                        </div>
                                        <div class='tab-pane fade' id=@valuesParentDivId>
                                            <div id='@valuesElementId'></div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div id='values_@sensorId'></div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>