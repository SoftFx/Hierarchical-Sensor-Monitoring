@using HSMServer.Core.Model
@using HSMServer.Extensions
@using HSMServer.Model.Authentication.History

@model HistoryValuesViewModel

@{
    Model.Pages[0].Reverse();
    var firstPage = Model.Pages[0];
}

@for (var i = 1; i < firstPage.Count; i++)
{
    var value = (FileValue)firstPage[i];
    
    bool isEnabledPreview = (value.Extension == "csv" && value.OriginalSize < 5 * 1024 * 1024) ||
                             (value.Extension == "txt" && value.OriginalSize < 1024 * 1024);
    
    <div class='accordion my-1' id='sensorData_@i'>
        <div class='accordion-item'>
            <h2 class='accordion-header' id='heading_@i'>
                <button id='file_accordion_' class='accordion-button collapsed' type='button' data-bs-toggle='collapse'
                        data-bs-target='#collapse_@i' aria-expanded='false' aria-controls='collapse_@i' onclick="previewButtonClick('@value.Time.Ticks', @i, '@value.Extension')" @(!isEnabledPreview ? "disabled" : "")> 
                    <div class="w-100">
                        <div class='row justify-content-between'>
                            <div class='row col-md-auto align-items-center ms-3'>
                                @value.Name
                                @if (value.Value != null)
                                {
                                    <a id='button_view_@i' class='btn btn-outline-secondary d-flex justify-content-center mx-1' title='Preview' style="width: 2rem; height: 2rem">
                                        <i class='fas fa-eye'></i>
                                    </a>

                                    <input style='display: none;' id='fileType_' value='@value.Name'/>
                                    <a id='button_download_@i' class='btn btn-outline-secondary d-flex justify-content-center mx-1' title='Download' style="width: 2rem; height: 2rem">
                                        <i class='fas fa-file-download'></i>
                                    </a>
                                }
                            </div>

                            <div class='col-md-auto time-ago-div me-1' id='update_@i'>updated @value.ReceivingTime.GetTimeAgo()</div>
                        </div>
                        <div id="value_@i" class="text-break">
                            @value.ShortInfo
                        </div>
                        <div class="text-break">

                        </div>
                    </div>
                </button>
            </h2>
            <div id='collapse_@i' class='accordion-collapse collapse text-break' aria-labelledby='heading_@i' data-bs-parent='#sensorData_@i'>
                <div class='accordion-body p-3'>
                    <div class="d-grid d-none pt-3" id="preview_@i">
                        <h5 id="preview-header">Content:</h5>
                        <div style="overflow-x: auto" id="preview-content_@i"></div>
                    </div>
                    @if (!isEnabledPreview)
                    {
                        <div id="bigFilePreview" class="card text-center">
                            <div class="card-body">
                                @switch (value.Extension)
                                {
                                    case "csv":
                                        <h5 class="card-title">This file is too big to preview (>5MB)</h5>
                                        break;
                                    case "txt":
                                        <h5 class="card-title">This file is too big to preview (>1MB)</h5>
                                        break;
                                    default:
                                        <h5 class="card-title">Current file type is not available in preview mode</h5>
                                        break;
                                }
                                <button id="button_download_@i" href="#" class="btn btn-outline-primary mt-2">Start download</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<script>
    function previewButtonClick(time, currentId, extension){
        let encodedId = ($('[id^=recentValues_]')).attr('id').substring("recentValues_".length);
        
        if ($(`#preview-content_${currentId}`)[0].innerHTML !== '')
            return;
        
        $.ajax({
            type: 'POST',
            url: `${viewFileAction}?Selected=${encodedId}&datetime=${time}`,
            cache: false,
            contentType: 'application/json',
            success: function (file){
                let dataSet = []
                if (extension === 'csv') {
                    file.split('\n').forEach( el =>{
                        let splitted = el.split(',');
                        
                        let isEmpty = splitted.every(x => {
                            return x !== '';
                        })
                        
                        if (isEmpty) {
                            dataSet.push(el.split(','))
                        }
                    })
                    
                    let columns = [];
                    
                    dataSet[0].forEach(el => {
                        columns.push({"tittle" : el})
                    });
                    
                     $(`#preview_${currentId}`).removeClass('d-none container');
                     $(`#preview-content_${currentId}`).html( `<table class="display w-100" id="example_${currentId}"></table>` );
                                         
                     $(`#example_${currentId}`).dataTable( {
                        "data": dataSet.splice(1),
                        "columns": columns,
                        "lengthMenu": [ [5, 20, 50, 100], [5, 20, 50, 100] ],
                        "pageLength": 20
                     });  
                }
                else if (extension === 'txt') {
                    $(`#preview_${currentId}`).removeClass('d-none container');
                    $(`#preview-content_${currentId}`).addClass('w-100 mw-100 text-break').html(file); 
                }
            }
        })
    }
</script>