@using HSMCommon.Extensions
@using HSMServer.Model.ViewModel
@using HSMServer.Extensions
@using HSMServer.Core.Model

@model SensorInfoViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers


<div class="d-flex justify-content-start">
    <div class="d-flex ms-3 text-nowrap">
        <span style="min-width: 9rem">Sensor type:</span>
    </div>
    <div class="d-flex flex-row w-100">
        <span>@(Model.SensorType)</span>
        @if (Model.IsSingleton)
        {
            <span class="ms-1">(Singleton <i class='fas fa-question-circle' title='If the data comes from multiple sources at the same time, only first sensor data are stored in the database.'></i>)</span>
        }
    </div>
    @{
        var type = Model.SensorType;

        if (Model.Header.Split('/')[^1] == "Service status")
            type = SensorType.Enum;
    }
    <input id='sensor_type_@Model.EncodedId' value='@((int)type)' style='display: none' />
</div>

<div class="d-flex justify-content-start">
    <div class="d-flex ms-3 text-nowrap">
        <span style="min-width: 9rem">Sensor status:</span>
    </div>
    <div class="d-flex w-100">
        <li class='@Model.Status.ToIcon() sensor-icon-with-margin align-self-center' title='Status: @Model.Status'></li>
        <span>@Model.Status</span>
        @if (!Model.IsMuted)
        {
            <span onclick="loadEditSensorStatusModal('@Model.EncodedId')">
                <i class="fas fa-edit align-self-center ms-2" style="cursor: pointer"></i>
            </span>
        }
    </div>
</div>

@if (Model.HasGrafana)
{
    <div class="d-flex justify-content-start">
        <div class="d-flex ms-3 text-nowrap">
            <span style="min-width: 9rem">Enabled for:</span>
        </div>
        <div class="d-flex w-100">
            <div class="sensor-icon-with-margin">
                <img class="tree-png-icon" src="~/dist/grafana.svg" alt="!" />
            </div>
            <span>Grafana</span>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Model.StatusComment))
{
    <div class="d-flex justify-content-start">
        <div class="d-flex ms-3 text-nowrap">
            <span style="min-width: 9rem">Status comment:</span>
        </div>
        <div class="d-flex w-100">
            <span id="markdown_status_comment">@Html.Raw(Model.StatusComment)</span>
        </div>
    </div>
}

@if (Model.SelectedUnit is not null)
{
    <div class="d-flex justify-content-start">
        <div class="d-flex ms-3 text-nowrap">
            <span style="min-width: 9rem">Unit:</span>
        </div>
        <div class="d-flex w-100">
            <span id="markdown_status_comment">@Model.SelectedUnit.GetDisplayName()</span>
        </div>
    </div>
}

@if (Model.SensorType is not (SensorType.IntegerBar or SensorType.DoubleBar or SensorType.File))
{
    <div class="d-flex justify-content-start align-items-center">
        <div class="d-flex ms-3 text-nowrap">
            <span style="min-width: 9rem">Aggregate values:</span>
        </div>
        <div class="d-flex form-check form-switch m-0">
            <input id="saveOnlyUniqueValuesSwitch" class="form-check-input" type="checkbox" role="switch" asp-for="AggregateValues" disabled>
        </div>
        <i class='fas fa-question-circle' title='The option helps to optimize the database storage. If the option is switched on, only unique sensor values are stored in the database. A sensor value is unique if the previous value has a different Value, Status or Comment.'></i>
    </div>
}

@if (Model.SensorType is (SensorType.IntegerBar or SensorType.DoubleBar or SensorType.Double or SensorType.Integer or SensorType.Rate))
{
    <div class="d-flex justify-content-start align-items-center">
        <div class="d-flex ms-3 text-nowrap">
            <span style="min-width: 9rem">EMA statistics:</span>
        </div>
        <div class="d-flex form-check form-switch m-0">
            <input id="emaStatisticsSwitch" class="form-check-input" type="checkbox" role="switch" asp-for="IsEMA" disabled>
        </div>
        <i class='fas fa-question-circle' title='Exponential Moving Average (EMA). If the option is switched on, EMA statistics is calculated. The option is available only for Integer and Double sensors (property Value), IntegerBar and DoubleBar sensors (properties Min, Mean, Max, Count). EMA statistics formula is Current EMA = 0.9 * Last EMA Value + 0.1 * Current Value.'></i>
    </div>
}
