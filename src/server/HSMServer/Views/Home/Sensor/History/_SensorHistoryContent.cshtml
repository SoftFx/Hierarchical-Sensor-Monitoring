@using HSMCommon.Extensions
@using HSMServer.Controllers
@using HSMServer.Core
@model HSMServer.Model.TreeViewModel.SensorNodeViewModel

@{
    var sensorId = Model.EncodedId;

    var graphParentDivId = $"graph_parent_{sensorId}";
    var journalParentDivId = $"journal_parent_{sensorId}";
    var valuesParentDivId = $"values_parent_{sensorId}";

    var history_period = HistoryPeriod.Default;

    var selectedItems = Enum.GetValues<HistoryPeriod>().Select(x =>
    {
        if (Model.IsServiceAlive && x == HistoryPeriod.ThreeDays)
        {
            history_period = HistoryPeriod.ThreeDays;
            return new SelectListItem {Value = x.ToString(), Text = x.GetDisplayName(), Selected = true};
        }
        
        return new SelectListItem {Value = x.ToString(), Text = x.GetDisplayName(), Selected = false};
    }).ToList();
}

<div id='historyDataPanel' class='pt-3 text-break hidden_element'>
    <div class="d-flex justify-content-between">
        <div id="datePickerFromTo">
            <label class="me-1">Period:</label>
            <select asp-for="@history_period" class="me-2" asp-items="@selectedItems"></select>
            
            <label class="me-1" id="from_@(sensorId)_label" for="from_@sensorId">From:</label>
            <input class="me-2" type="datetime-local" id="from_@sensorId" name="from">

            <label class="me-1" id="to_@(sensorId)_label" for="to_@sensorId">To:</label>
            <input class="me-2" type="datetime-local" id="to_@sensorId" name="to">

            @if (Model.Type.IsBar())
            {
                <label class="me-1" for="barsCount_@sensorId" id="labelBarsCount_@sensorId"
                       title="The maximum count of bars displayed on the chart. If the actual count of bars is greater than the 'Bars count' value, then the bars are aggregated.">
                    Bars count:
                </label>
                <input class="me-2" style="width:70px" type="number" id="barsCount_@sensorId" name="barsCount" min="1" max="1000"
                       title="The maximum count of bars displayed on the chart. If the actual count of bars is greater than the 'Bars count' value, then the bars are aggregated.">
            }

            <button onclick="searchHistory('@sensorId')" type="button" class="btn btn-secondary">
                <i type="button" class="fas fa-search"></i>
            </button>
        </div>

        <div class='btn-group'>
            <button class='btn btn-secondary btn-sm dropdown-toggle' type='button' data-bs-toggle='dropdown'>Actions</button>
            <ul class='dropdown-menu'>
                <li>
                    <a class='dropdown-item' href='#' id='button_export_csv_@sensorId'>Export to CSV</a>
                </li>
                <li>
                    <a class='dropdown-item' href='#' id="allColumnsButton">Show all columns</a>
                </li>
            </ul>
        </div>
    </div>
    <div class="mt-2">
        <div id='no_data_@sensorId' style='display: none'>
            <p>No data for the specified period</p>
        </div>

        <div id='history_@sensorId'>
            <ul id="content_links" class='nav nav-tabs flex-fill'>
                @if (Model.IsChartSupported)
                {
                    <li class='nav-item' name="graph">
                        <a id='link_graph_@sensorId' class='nav-link' data-bs-toggle='tab' href='#@graphParentDivId'>Graph</a>
                    </li>
                }
                <li class='nav-item' name="table">
                    <div class="d-flex flex-row align-items-center">
                        <a id='link_table_@sensorId' class='nav-link' data-bs-toggle='tab' href='#@valuesParentDivId'>
                            Table
                            <span id="newValuesCount" class="badge rounded-pill badge-light fw-semibold"></span>
                        </a>
                        <div id="tableHistoryRefreshButton" class="table-history-refresh ms-3 d-none">
                            <a class='table-history-refresh-link fw-semibold' href="javascript:refreshTable();">Refresh</a>
                        </div>
                    </div>
                </li>
                <li class='nav-item' name="journal">
                    <a id='link_journal_@sensorId' class='nav-link @(Model.IsJournalEmpty ? "hidden_element" : "")' data-bs-toggle='tab' href='#@journalParentDivId'>Journal</a>
                </li>
            </ul>
        </div>
    </div>

    <div class="tab-content">
        @await Html.PartialAsync("Sensor/History/_SensorGraphTabContent", Model)
        @await Html.PartialAsync("Sensor/History/_SensorValuesTabContent", Model)
        @await Html.PartialAsync("Sensor/History/_SensorJournalTabContent", Model)
    </div>
</div>

<script>
    function refreshTable() {
            $(`#link_table_@sensorId`).trigger('click');
        }
</script>