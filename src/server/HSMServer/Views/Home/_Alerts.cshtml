@using Microsoft.AspNetCore.Mvc.TagHelpers
@model HSMServer.Model.ViewModel.NodeInfoBaseViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="form-control border-0 fw-bold px-0" style="max-width: 15rem;">
    Alerts:
</div>
<div class="d-flex ms-3 text-nowrap align-self-center">
    <span class="d-flex align-items-center" style="min-width: 18rem">
       Time to sensor(s) live <i class='fas fa-question-circle ps-1' title='Time format: dd.hh:mm:ss min value 00:01:00. If the sensor doesn`t receive new data within the specified time interval, a notification sends'></i>
    </span>
    <div class="pb-0" style="width: 17rem;">
        <label id="labelInterval" class="form-control naked-text pb-0">@Model.ExpectedUpdateInterval.DisplayInterval</label>
        <div id="partialIntervalSelect" class="d-none">
            <partial name="_TimeIntervalSelect" for="ExpectedUpdateInterval"/>
        </div>
    </div>
    <span class="d-flex align-self-center ms-2" asp-validation-for="ExpectedUpdateInterval"></span>
</div>
<div class="d-flex mt-1 ms-3 text-nowrap">
    <span class="d-flex align-items-center" style="min-width: 18rem">
        Sensitivity sensor(s) interval <i class='fas fa-question-circle ps-1' title='Time format: dd.hh:mm:ss min value 00:01:00. If the sensor doesn`t return to Ok status after the specified time inverval, a notification sends'></i>
    </span>
    <div class="pb-0" style="width: 17rem;">
        <label id="labelRestoreInterval" class="form-control naked-text pb-0">@Model.SensorRestorePolicy.DisplayInterval</label>
        <div id="partialRestoreSelect" class="d-none">
            <partial name="_TimeIntervalSelect" for="SensorRestorePolicy"/>
        </div>
    </div>
     <span class="d-flex align-self-center ms-2" asp-validation-for="SensorRestorePolicy"></span>
</div>