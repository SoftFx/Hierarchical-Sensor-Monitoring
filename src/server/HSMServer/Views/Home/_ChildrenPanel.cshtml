@using HSMServer.Model.TreeViewModel

@model BaseNodeViewModel

@{
    string nodeId = Model.Id.ToString();
   
    var listDivId = $"list_{nodeId}";
    var gridDivId = $"grid_{nodeId}";

    var visibilityClass = Model.GridNodes.VisibleItems.Count > 0 || Model.GridSensors.VisibleItems.Count > 0 ? string.Empty : "d-none";
}


<ul id="dataPanel" class='nav nav-tabs @visibilityClass' role="tablist">
    <li class='nav-item'>
        <a id="gridLink_@nodeId" class='nav-link' data-bs-toggle='tab' href='#@gridDivId' role="tab"><i class="fa-solid fa-table-cells-large"></i> Grid</a>
    </li>
    <li class='nav-item'>
        <a id="listLink_@nodeId" class='nav-link' data-bs-toggle='tab' href='#@listDivId' role="tab"><i class="fa-solid fa-list"></i> List</a>
    </li>
</ul>
<div class='tab-content'>
    <div class='tab-pane fade' id=@gridDivId role="tabpanel">
         @await Html.PartialAsync("_GridAccordion", Model.GridNodes) 
         @await Html.PartialAsync("_GridAccordion", Model.GridSensors) 
    </div>

    <div class='tab-pane fade' id=@listDivId role="tabpanel">
         @await Html.PartialAsync("_ListAccordion", Model.GridNodes.VisibleItems) 
         @await Html.PartialAsync("_ListAccordion", Model.GridSensors.VisibleItems) 
    </div>
</div>
