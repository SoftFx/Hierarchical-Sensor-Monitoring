@using HSMServer.Model.ViewModel
@using HSMServer.Constants
@model List<ProductViewModel>

@{ ViewData["Title"] = "Products"; }


<script>
    var deleteAction = "@Html.Raw(Url.Action(ViewConstants.RemoveProductAction, ViewConstants.ProductController))";
    var createAction = "@Html.Raw(Url.Action(ViewConstants.CreateProductAction, ViewConstants.ProductController))";
    var editAction = "@Html.Raw(Url.Action(ViewConstants.EditProductAction, ViewConstants.ProductController))";
</script>

<div class="container">
    <div class="row w-100 justify-content-center">
        @await Html.PartialAsync("_ProductList", Model)
        <script>
        let errorText = '@TempData[TextConstants.TempDataErrorText]';
        if (errorText !== undefined) {
            let errorSpan = document.getElementById('new_product_name_span');
            if (errorSpan != undefined) {
                errorSpan.textContent = errorText;//.slice(0, errorText.length - 5);
                errorSpan.setAttribute("style", "display: block;color: red;font-size: large;font-weight: normal;white-space: pre-line");
            }
        }
        </script>
    </div>
</div>


<div class="modal fade" id="modalDelete" tabindex="-1" aria-labelledby="modalDeleteLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalDeleteLabel">Remove product</h5>
            </div>

            <div id="modalDeleteBody" class="modal-body text-break">

            </div>

            <div class="modal-footer">
                <button id="closeDeleteButton" type="button" class="btn btn-secondary col-2" data-bs-dismiss="modalDelete">Close</button>
                <button id="confirmDeleteButton" type="button" class="btn btn-secondary col-2">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    //copy buttons
    var clipboard = new ClipboardJS('[id^="copy_"]');

    //delete buttons
    $('[id^="delete_"]').on("click",
        function () {
            key = this.id.substring("delete_".length, this.id.length);
            name = $('#inputName_' + key).text();
            
            $('#modalDeleteBody').empty();
            $('#modalDeleteBody').append(`Do you really want to remove "${name.trim().substring(0, 100)}" product?`);

            var modal = new bootstrap.Modal(document.getElementById('modalDelete'));
            modal.show();

            //modal confirm
            $('#confirmDeleteButton').on('click', function () {
                modal.hide();

                $.ajax({//ProductController -> RemoveProduct
                    type: 'GET',
                    url: deleteAction + "?Product=" + key,
                    cache: false,
                    async: true,
                    success: function () {
                        document.location.reload();
                    }
                });
            });

            //modal close
            $('#closeDeleteButton').on('click', function () {
                modal.hide();
            });
        });

    //create button
    $('#createButton').on('click', function () {
        name = $('#createName').val();

        name = encodeURIComponent(name);
            $.ajax({
            type: 'GET',
            url: createAction + "?Product=" + name,
            cache: false,
            async: true,
            success: function() {
                document.location.reload();
            }
        });
    });

    $('[id^=change_]').on('click', function () {
        key = this.id.substring("change_".length, this.id.length);
        window.location.href = editAction + "?Product=" + key;
    }); 
</script>