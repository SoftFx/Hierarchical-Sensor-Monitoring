@using HSMServer.Constants
@using HSMServer.Controllers
@using HSMServer.Helpers
@using HSMServer.Model.Authentication
@using HSMServer.Model.Folders.ViewModels
@using HSMServer.Model.ViewModel

@model List<FolderViewModel>

@{
    ViewData["Title"] = "Products";

    ViewBag.UserFolders = Model.ToDictionary(f => f.Id?.ToString() ?? string.Empty, f => f.Name);
}


<script>
    var deleteAction = "@Html.Raw(Url.Action(ViewConstants.RemoveProductAction, ViewConstants.ProductController))";
    var editAction = "@Html.Raw(Url.Action(ViewConstants.EditProductAction, ViewConstants.ProductController))";
</script>


<div class="container">
    <div class="row w-100 justify-content-center">
        <div class="m-2">
            <div class="d-flex justify-content-between my-2">
                <h5>Products</h5>

                @if (UserRoleHelper.IsUserCRUDAllowed(Context.User as User))
                {
                    <div class='d-flex col-md-auto'>
                        <a class="mx-3" href="javascript:showAddProductModal();">
                            <i class="fa-solid fa-plus"></i> Add product
                        </a>
                        <a href="@Url.Action(nameof(FoldersController.EditFolder), ViewConstants.FoldersController)">
                            <i class="fa-solid fa-folder-plus"></i> Add folder
                        </a>
                    </div>
                }
            </div>
        </div>

        @foreach (var folder in Model)
        {
            @await Html.PartialAsync("_FolderAccordion", folder)
        }
    </div>
</div>


@await Html.PartialAsync("_AddProductModal", new AddProductViewModel())
@await Html.PartialAsync("~/Views/Shared/_ConfirmationModal.cshtml")
