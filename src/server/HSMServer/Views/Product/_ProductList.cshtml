@using HSMServer.Helpers
@using HSMServer.Model.Authentication
@using HSMServer.Extensions
@using HSMServer.Model.Folders.ViewModels
@using HSMServer.Model.ViewModel
@using HSMServer.Constants
@using HSMServer.Controllers

@model FolderViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var user = Context.User as User;
    bool isProductCrudAllowed = UserRoleHelper.IsUserCRUDAllowed(user);
    bool isProductActionAllowed = ProductRoleHelper.IsProductActionAllowed(user?.ProductsRoles);
}
 

<div class="w-100 productTable">
    <form id="folderProductsForm_@Model.Id" asp-controller="@ViewConstants.ProductController" asp-action="@nameof(ProductController.FilterFolderProducts)">
        <input class='d-none' name='folderId' value="@Model.Id" />
        <table id="folderProductsTable_@Model.Id" class="table table-striped">
            <thead>
                <tr>
                    <th>
                        <div class="form-floating m-0 p-0">
                            <input placeholder="Name" id='searchProduct' type='text' class='form-control' name='productName' value="@ViewBag.ProductName"/>
                            <label for="searchProduct">Name</label>
                        </div>
                    </th>
                    <th>
                        <div class="form-floating m-0 p-0">
                            <input id="searchManager" class='form-control' type='text' name="productManager" placeholder="Manager" value="@ViewBag.ProductManager"/>
                            <label for="searchManager">Managers</label>
                        </div>
                    </th>
                    <button class="d-none"></button>
                    <th>
                        <a class="btn sortSubmit" onclick="sortTable(this, 2, '@Model.Id')" type="submit">
                            Last update
                            <i id="sortIcon" class="fa-solid fa-sort"></i>
                        </a>
                    </th>
                    @if (isProductCrudAllowed || isProductActionAllowed)
                    {
                        <th class="text-center">Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model.Products)
                {
                    <tr>
                        <td class="text-break">
                            @if (user.IsManager(product.Id))
                            {
                                <a class="productName_anchor" id="inputName_@product.Id" asp-controller="Product" asp-action="EditProduct" asp-route-Product="@product.EncodedId">
                                    @Html.Raw(product.Name)
                                </a>
                            }
                            else
                            {
                                @Html.Raw(product.Name)
                            }
                        </td>
                        <td class="text-break">
                            @if (product.Managers.Count == 0)
                            {
                                <span>---</span>
                            }
                            else
                            {
                                var managers = string.Join(", ", product.Managers);
                                <span>@Html.Raw(managers)</span>
                            }
                        </td>
                        <td>
                            <span title="@product.LastUpdateDate.ToDefaultFormat()" time="@product.LastUpdateDate">
                                @product.ShortLastUpdateTime
                            </span>
                            @if (product.ProductUpdateIsExpired)
                            {
                                <span>
                                    <img title="Product sensor(s) haven't been updated for @ProductViewModel.ProductExpiredTime.ToToolTip()" src="~/dist/warning.svg" id="svg_exclamation" alt="warning icon"/>
                                </span>
                            }
                        </td>
                        <td nowrap class="text-center w-10">
                            <div class='btn-group'>
                                @if (isProductCrudAllowed || ProductRoleHelper.IsManager(product.Id, user?.ProductsRoles))
                                {
                                    <button id="actionButton" class="btn" data-bs-toggle="dropdown" data-bs-auto-close="true" aria-haspopup="true" aria-expanded="false">
                                        <i class="fa-solid fa-ellipsis-vertical" style="cursor: pointer"></i>
                                    </button>
                                }
                                else
                                {
                                    <i class="fa fa-ellipsis-vertical disabled" style="color: darkgrey" data-bs-toggle="dropdown"></i>
                                }
                                <ul class='dropdown-menu overflow-auto' aria-labelledby="dropdownMenuButton">
                                    <li>
                                        <a id='change_@product.EncodedId' class='dropdown-item text-decoration-none fw-normal' style="cursor: pointer;">
                                            Edit
                                        </a>
                                    </li>
                                    @if (isProductCrudAllowed)
                                    {
                                        <li>
                                            <a id='delete_@product.Id' class='dropdown-item text-decoration-none fw-normal' style="cursor: pointer;">
                                                Delete
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </form>
</div>


<script>
    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href );
    }

    $(document).on("submit", "[id^=folderProductsForm_@Model.Id]", function (event) {
        event.preventDefault();
        event.stopImmediatePropagation();

        let folderId = this.id.substring('folderProductsForm_'.length, this.id.length);

        $.ajax({
            url: $(`#folderProductsForm_${folderId}`).attr("action"),
            type: 'POST',
            data: $(`#folderProductsForm_${folderId}`).serialize(),
            datatype: 'json',
            async: true,
            success: (viewData) => {
                $(`#accordionBody_${folderId}`).html(viewData);
            }
        });
    });
</script>