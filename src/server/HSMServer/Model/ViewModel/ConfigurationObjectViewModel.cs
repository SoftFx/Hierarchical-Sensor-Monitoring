using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using HSMServer.ServerConfiguration;

namespace HSMServer.Model.ViewModel
{
    public sealed class ConfigurationViewModel
    {
        public string Name { get; private set; }

        public bool IsDefault { get; private set; }

        public string DefaultValue { get; private set; }

        public string Description { get; private set; }


        public string PropertyName { get; set; }

        public string Value { get; set; }


        public static Dictionary<string, ConfigurationViewModel> TelegramSettings(TelegramConfigurationViewModel telegramConfig)
        {
            var configs = new Dictionary<string, ConfigurationViewModel>()
            {
                {
                    nameof(telegramConfig.BotName), new()
                    {
                        Name = "Bot Name",
                        PropertyName = nameof(telegramConfig.BotName),
                        Description = "Installed by BotFather bot name. It must be ended with 'bot'. Installation link <a href='https://core.telegram.org/bots/features#botfather' target='_blank'>Bot Installation</a>.",
                        Value = telegramConfig.BotName,
                        IsDefault = string.IsNullOrEmpty(telegramConfig.BotName),
                        DefaultValue = string.Empty
                    }
                },
                {
                    nameof(telegramConfig.BotToken),
                    new()
                    {
                        Name = "Bot Token",
                        PropertyName = nameof(telegramConfig.BotToken),
                        Description = "Generated by BotFather secret access token. Installation link <a href='https://core.telegram.org/bots/features#botfather' target='_blank'>Bot Installation</a>.",
                        Value = telegramConfig.BotToken,
                        IsDefault = string.IsNullOrEmpty(telegramConfig.BotToken),
                        DefaultValue = string.Empty
                    }
                },
                {
                    nameof(telegramConfig.IsRunning),
                    new()
                    {
                        Name = "Is bot running",
                        PropertyName = nameof(telegramConfig.IsRunning),
                        Description = "Can bot send messages",
                        Value = telegramConfig.IsRunning.ToString(),
                        IsDefault = telegramConfig.IsRunning == false,
                        DefaultValue = bool.FalseString
                    }
                },
            };

            return configs;
        }
    }

    public sealed class TelegramConfigurationViewModel
    {
        [Display(Name = "Bot Name")] 
        public string BotName { get; set; }

        [Display(Name = "Bot Token")] 
        public string BotToken { get; set; }

        [Display(Name = "Is running")] 
        public bool IsRunning { get; set; }

        public TelegramConfigurationViewModel(TelegramConfig config)
        {
            BotName = config.BotName;
            BotToken = config.BotToken;
            IsRunning = config.IsRunning;
        }
    }
}