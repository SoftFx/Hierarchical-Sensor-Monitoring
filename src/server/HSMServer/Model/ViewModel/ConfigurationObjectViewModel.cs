using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using HSMServer.ServerConfiguration;

namespace HSMServer.Model.ViewModel
{
    public sealed class ConfigurationViewModel
    {
        public TelegramConfigurationViewModel Telegram { get; set; }
        
        public string Name { get; set; }
        
        public string PropertyName { get; set; }
        public string Value { get; set; }
        public bool IsDefault { get; set; }
        public string Description { get; set; }
        public Type Type { get; set; }
        
        public static List<ConfigurationViewModel> TelegramSettings(TelegramConfig telegramConfig)
        {
            var configs = new List<ConfigurationViewModel>()
            {
                new ()
                {
                    Name = "Bot Name",
                    PropertyName = nameof(telegramConfig.BotName),
                    Description = "Installed by BotFather botname. It must be ended with 'bot'. Installation link Bot Installation.",
                    Value = telegramConfig.BotName,
                    Type = telegramConfig.BotName.GetType()
                },
                new ()
                {
                    Name = "Bot Token",
                    PropertyName = nameof(telegramConfig.BotToken),
                    Description = "Generated by BotFather secret access token. Installation link Bot Installation.",
                    Value = telegramConfig.BotToken,
                    Type = telegramConfig.BotToken.GetType()
                },
                new ()
                {
                    Name = "Is bot running",
                    PropertyName = nameof(telegramConfig.IsRunning),
                    Description = "Installed by BotFather botname. It must be ended with 'bot'. Installation link Bot Installation.",
                    Value = telegramConfig.IsRunning.ToString(),
                    Type = telegramConfig.IsRunning.GetType()
                },
            };

            return configs;
        }
        
    }

    public class TelegramConfigurationViewModel
    {
        [Display(Name = "Bot Name")]
        public string BotName { get; set; }
        
        [Display(Name = "Bot Token")]
        public string BotToken { get; set; }
        
        [Display(Name = "Is running")]
        public bool IsRunning { get; set; }

        public TelegramConfigurationViewModel(TelegramConfig config)
        {
            BotName = config.BotName;
            BotToken = config.BotToken;
            IsRunning = config.IsRunning;
        }
    }
    
    public class ConfigurationObjectViewModel
    {
        public string Name { get; set; }
        public string Value { get; set; }
        public bool IsDefault { get; set; }
        public string Description { get; set; }

        public ConfigurationObjectViewModel() { }
        //public ConfigurationObjectViewModel(ConfigurationObject obj, bool isDefault)
        //{
        //    IsDefault = isDefault;
        //    Name = obj.Name;
        //    Value = obj.Value;
        //    Description = obj.Description;

        //    if (Name == ConfigurationConstants.SensorExpirationTime)
        //        Name = "Remove sensor data after N days inactivity";
        //}
        
    }
}
