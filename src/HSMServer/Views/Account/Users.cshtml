@using HSMServer.Model.ViewModel
@using HSMServer.Constants
@using HSMServer.HtmlHelpers
@model List<UserViewModel>

@{ ViewData["Title"] = "Users"; }


<script>
    var createAction = "@Html.Raw(Url.Action(ViewConstants.CreateUserAction, ViewConstants.AccountController))";
    var deleteAction = "@Html.Raw(Url.Action(ViewConstants.RemoveUserAction, ViewConstants.AccountController))";
    var updateAction = "@Html.Raw(Url.Action(ViewConstants.UpdateUserAction, ViewConstants.AccountController))";
</script>

<div class="container">
    <div class="row justify-content-center">
        @if (TempData[TextConstants.TempDataErrorText] != null)
        {
            <span style="color: red;font-size: large;font-weight:normal">@TempData[TextConstants.TempDataErrorText].ToString()</span>
        }

        @ViewHelper.CreateUserList(Context.User, Model, TempData[TextConstants.TempDataProductsText])
    </div>
</div>


<div class="modal fade" id="modalDelete" tabindex="-1" aria-labelledby="modalDeleteLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalDeleteLabel">Remove user</h5>
            </div>

            <div id="modalDeleteBody" class="modal-body">

            </div>

            <div class="modal-footer">
                <button id="closeDeleteButton" type="button" class="btn btn-secondary" data-bs-dismiss="modalDelete">Close</button>
                <button id="confirmDeleteButton" type="button" class="btn btn-secondary">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    function createData(userName, password, role, isAdmin, products) {
        return {
            "Username": userName,
            "Password": password,
            "Role": Number(role),
            "IsAdmin": isAdmin,
            "ProductKeys": products
        }
    }

    //fix checked attribute
    $('#createIsAdmin').on('click', function () {
        if (this.checked)
            this.setAttribute("checked", "checked");
        else this.removeAttribute("checked");
    });

    $('[id^=isAdmin_]').on('click', function () {
        if (this.checked)
            this.setAttribute("checked", "checked");
        else this.removeAttribute("checked");
    });

    //create action
    $('#createButton').on('click', function () {
        username = $('#createName').val();
        password = $('#createPassword').val();
        role = $('#createRole').val();
        isAdmin = $('#createIsAdmin').is(":checked");

        var data = createData(username, password, role, isAdmin, null);
        //console.log(data);
        $.ajax({
            type: 'POST',
            url: createAction,
            data: JSON.stringify(data),
            contentType: 'application/json',
            cache: false,
            async: true
        }).done(function(result) {
            document.location.reload();
        });
    });

    //delete action
    $('[id^=delete_]').on('click', function () {
        username = this.id.substring('delete_'.length, this.id.length);
        //console.log(username);

        $('#modalDeleteBody').empty();
        $('#modalDeleteBody').append('Do you really want to remove "' + username + '" user?');

        var modal = new bootstrap.Modal(document.getElementById('modalDelete'));
        modal.show();

        //modal confirm
        $('#confirmDeleteButton').on('click', function () {
            modal.hide();

            $.ajax({//AccountController -> RemoveUser
                type: 'GET',
                url: deleteAction + "?Username=" + username,
                cache: false,
                async: true,
                success: function () {
                    document.location.reload();
                }
            });
        });

        //modal close
        $('#closeDeleteButton').on('click', function () {
            modal.hide();
        });
    });

    //change action
    $('[id^=change_]').on('click', function () {
        username = this.id.substring('change_'.length, this.id.length);

        $('[id^=role_]').attr('disabled', true);
        $('[id^=ok_]').attr('disabled', true);
        $('[id^=cancel_]').attr('disabled', true);
        $('[id^=isAdmin_]').attr('disabled', true);

        $('#role_' + username).removeAttr("disabled");
        $('#ok_' + username).removeAttr("disabled");
        $('#cancel_' + username).removeAttr("disabled");
        $('#isAdmin_' + username).removeAttr("disabled");
    });

    $('[id^=cancel_]').on('click', function() {
        document.location.reload();
    });

    $('[id^=ok_]').on('click', function () {
        username = this.id.substring('ok_'.length, this.id.length);
        role = $('#role_' + username).val();
        isAdmin = $('#isAdmin_' + username).is(":checked");

        var data = createData(username, null, role, isAdmin, null);
        $.ajax({
            type: 'POST',
            url: updateAction,
            data: JSON.stringify(data),
            contentType: 'application/json',
            cache: false,
            async: true
        }).done(function (result) {
            document.location.reload();
        })
    });

</script>